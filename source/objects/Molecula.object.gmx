<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>formula = "";
categoria = "";
seleccionado = false;
elementos = ds_list_create();
enlaces = ds_list_create();
estructura = noone;
alarm_set(0, 3)
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="1" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>for(var i=0; i&lt;ds_list_size(elementos); i++) {
    with(ds_list_find_value(elementos, i)) {
        instance_destroy();
    }
}
for(var j=0; j&lt;ds_list_size(enlaces); j++) {
    with(ds_list_find_value(enlaces, j)) {
        instance_destroy();
    }
}
ds_list_destroy(elementos);
ds_list_destroy(enlaces);
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Construccion de molecula
var tam = ds_list_size(elementos);
var lista = "";
e_sort2(elementos);

estructura = ds_grid_create(tam, tam);
var str = runQuery("SELECT s_estructura FROM molecula 
                    WHERE s_formula='" + formula + "';",false);
ds_grid_read(estructura, enlarge(str[| 0]));

var celda, enlace, c, d, h;
for(c=0; c&lt;tam; c++) {
    for(d=0; d&lt;c; d++) {
        celda = estructura[# c, d];
        if not is_undefined(celda) {
            h = 0;
            repeat (int64(celda)) {
                enlace = instance_create(x, y, link);
                enlace.elem1 = elementos[| c];
                enlace.elem2 = elementos[| d];
                enlace.pos = h++;
                ds_list_add(enlaces, enlace);
            }
        }
    }
}
ds_list_destroy(str);

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var cant = ds_list_size(elementos);
var xx = 0;
var yy = 0;
if (cant &gt; 0) {
    for (var m=0; m&lt;cant; m++) {
        xx += (elementos[| m]).x;
        yy += (elementos[| m]).y;
    }
    x = xx/cant;
    y = yy/cant;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="11">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///deseleccionar
for(var i=0; i&lt;ds_list_size(elementos); i++) {
    with (elementos[| i]) {
        seleccionado = false;
    }   
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="10">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// seleccionar
for(var i=0; i&lt;ds_list_size(elementos); i++) {
    with (elementos[| i]) {
        seleccionado = true;
        _x = x - device_mouse_x(0);
        _y = y - device_mouse_y(0);
    }   
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="73">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///dibujar formula
draw_set_font(chemfont);
draw_set_colour(c_black);
draw_set_halign(fa_center);
draw_set_valign(fa_bottom);
var digits = "0123456789";
var posx = x;
var posy;
if not ds_list_empty(elementos) {
    posy = y+string_width(formula)+(elementos[| 0]).sprite_width/2;
    switch ds_list_size(elementos) {
        case 0: break;
        case 1: {
            draw_set_valign(fa_center);
            draw_text(x, posy, formula);
            }
            break;
        default: {
            for (var t=1; t&lt;=string_length(formula); t++) {
                var char = string_char_at(formula, t);
                if string_pos(char, digits)&gt;0 {
                    posx += draw_formula(posx-5, posy, chemfont_mini, char);
                } else {
                    posx += draw_formula(posx, posy, chemfont, char);
                }
            }
        }
    }
    
}

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
